{"version":3,"sources":["Componentes/Componente/Navbarlayout.js","Componentes/Componente/Containerlayout.js","Componentes/Componente/CardLayout.js","Componentes/Contenedores/SearchContainer.js","Componentes/Componente/DigimonListLayout.js","Componentes/Componente/SpinnerLayout.js","Componentes/Contenedores/MainDigimonContainer.js","Componentes/Componente/FooterLayout.js","Componentes/Pages/Home.js","Componentes/Componente/InfoDigimonLayout.js","Componentes/Pages/DetailDigimon.js","Componentes/Pages/Page404.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","role","aria-label","to","ContainerLayout","CardLayout","Component","props","src","img","alt","name","level","DigimonList","Digimons","map","digimon","i","key","SpinnerLayout","MainDigimonContainer","state","IsLoading","inputData","errorMessage","_handleChange","e","console","log","target","value","setState","_hanldeSubmit","preventDefault","fetch","then","res","json","data","ErrorMsg","_renderSpinner","this","onSubmit","type","placeholder","onChange","onClick","length","FooterLayout","href","Home","React","InfoDigimon","DetailDigimon","_fetch","match","params","Page404","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03667215.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav\n      className=\"navbar is-black\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n          Digimon Api\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst ContainerLayout = () => {\n  return (\n    <div className=\"container is-fullhd \">\n      <div className=\"notification App-container\">\n        <strong>Digimon Api</strong> - Contém todos os Digimons da primeira\n        geração e todos aqueles que saíram da série Anime.\n      </div>\n    </div>\n  );\n};\n\nexport default ContainerLayout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CardLayout = (props) => {\n  /* console.log('props', props); */\n\n  return (\n    <div className=\"card CardDigimon\">\n      <div className=\"card-image\">\n        <figure className=\"image is-128x128\">\n          <img src={props.img} alt={props.name} />\n        </figure>\n      </div>\n\n      <div className=\"media-content\">\n        <p className=\"title is-4\">{props.name}</p>\n        <p className=\"subtitle is-6\">{props.level}</p>\n        <Link className=\"has-text-info\" to={`/DetailDigimon/${props.name}`}>\n          Ver mais detalhes\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default CardLayout;\n","import React, { Component } from 'react';\n\nclass SearchContainer extends Component {\n  state = { inputData: '' };\n\n  _handleChange = (e) => {\n    console.log(e.target.value);\n    this.setState({ inputData: e.target.value });\n  };\n\n  _hanldeSubmit = (e) => {\n    e.preventDefault();\n    const { inputData } = this.state;\n    fetch(`https://digimon-api.herokuapp.com/api/digimon/name/${inputData}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        console.log('this.props._setState', this.props._setState);\n        this.props._setState(data);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form className=\"field is-grouped \" onSubmit={this._hanldeSubmit}>\n          <p className=\"control is-expanded\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Insira o nome aqui...\"\n              onChange={this._handleChange}\n            />\n          </p>\n          <p className=\"control\">\n            <button className=\"button is-info\" onClick={this._hanldeSubmit}>\n              Pesquisar\n            </button>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchContainer;\n","import React from 'react';\nimport CardDigimon from './CardLayout';\n\nconst DigimonList = (props) => {\n  return (\n    <div className=\"container DigimonList-item\">\n      {props.Digimons.map((digimon, i) => {\n        return (\n          <div key={i} className=\"DigimonList\">\n            <CardDigimon\n              name={digimon.name}\n              img={digimon.img}\n              level={digimon.level}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DigimonList;\n","import React from 'react';\n\nconst SpinnerLayout = () => {\n    return (\n        <div className=\"loading-spinner\">\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n            <p>Cargando!...</p>\n        </div>\n    );\n}\n\nexport default SpinnerLayout;","import React, { Component } from 'react';\nimport SearchContainer from './SearchContainer';\nimport DigimonsList from './../Componente/DigimonListLayout';\nimport SpinnerLayout from './../Componente/SpinnerLayout';\n\nclass MainDigimonContainer extends Component {\n  state = { Digimons: [], IsLoading: false, inputData: '', errorMessage: '' };\n\n  componentDidMount() {\n    this.setState({ IsLoading: true });\n\n    fetch('https://digimon-api.herokuapp.com/api/digimon')\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({ Digimons: data, IsLoading: false });\n        console.log('Digimons ', this.state.Digimons);\n      });\n  }\n\n  _handleChange = (e) => {\n    console.log(e.target.value);\n    this.setState({ inputData: e.target.value });\n  };\n\n  _hanldeSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ IsLoading: true });\n\n    const { inputData } = this.state;\n\n    fetch(`https://digimon-api.herokuapp.com/api/digimon/name/${inputData}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        /*  console.log(data.ErrorMsg); */\n\n        if (data.ErrorMsg) {\n          console.log('caiu no erro: ' + data.ErrorMsg);\n          this.setState({ errorMessage: data.ErrorMsg });\n        }\n\n        this.setState({ Digimons: data, IsLoading: false });\n        console.log('Pesquisa ', this.state.Digimons);\n      });\n  };\n\n  _renderSpinner = () => {\n    return <SpinnerLayout />;\n  };\n\n  render() {\n    const { Digimons, IsLoading, errorMessage } = this.state;\n\n    return (\n      <div>\n        <div className=\"container\">\n          <form className=\"field is-grouped \" onSubmit={this._hanldeSubmit}>\n            <p className=\"control is-expanded\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Insira o nome aqui...\"\n                onChange={this._handleChange}\n              />\n            </p>\n            <p className=\"control\">\n              <button className=\"button is-info\" onClick={this._hanldeSubmit}>\n                Pesquisar\n              </button>\n            </p>\n          </form>\n        </div>\n        {IsLoading\n          ? this._renderSpinner()\n          : Digimons.length > 0 && <DigimonsList Digimons={Digimons} />}\n        {errorMessage && <p className=\"CardDigimon\">{errorMessage}</p>}\n      </div>\n    );\n  }\n}\n\nexport default MainDigimonContainer;\n","import React from 'react';\n\nconst FooterLayout = () =>{\n    return (\n        <footer className=\"footer\">\n        <div className=\"content has-text-centered \">\n            <p>\n            The website content  an Api Digimon\n            is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Digimon Api</a>.\n            &copy; Copyright 2019\n            </p>\n        </div>\n    </footer>\n    );\n}\n\nexport default FooterLayout;","import React from 'react';\nimport Navbar from './../Componente/Navbarlayout';\nimport ContainerLayout from './../Componente/Containerlayout';\nimport MainDigimon from './../Contenedores/MainDigimonContainer';\nimport FooterLayout from './../Componente/FooterLayout';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <ContainerLayout />\n        <h1 className=\"title\">Digimon Api</h1>\n        <br />\n        <MainDigimon />\n        <FooterLayout />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const InfoDigimon = (props) => {\n  const { img, name, level } = props;\n  return (\n    <div className=\"container-fluid t_container \">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <figure className=\"image is-4by3\">\n            <img src={img} alt={name} />\n          </figure>\n        </div>\n        <div className=\"column\">\n          <h2>Informações Gerais</h2>\n          <hr />\n          <h3>Nome: {name} </h3>\n          <br />\n          <p>Nivel: {level}</p>\n          <p></p>\n          <Link to=\"/\">Voltar</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoDigimon } from './../Componente/InfoDigimonLayout';\nimport Navbar from './../Componente/Navbarlayout';\n\nclass DetailDigimon extends React.Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.object,\n      isExact: PropTypes.bool,\n      path: PropTypes.string,\n      url: PropTypes.string,\n    }),\n  };\n\n  state = { digimon: {} };\n\n  _fetch = ({ name }) => {\n    console.log('fetch');\n    fetch(`https://digimon-api.herokuapp.com/api/digimon/name/${name}`)\n      .then((res) => res.json())\n      .then((data) => {\n        let digimon = data[0];\n        this.setState({ digimon });\n      });\n  };\n\n  componentDidMount() {\n    const { name } = this.props.match.params;\n    this._fetch({ name });\n  }\n\n  render() {\n    console.log('this.state.digimon', this.state.digimon);\n    const { img, name, level } = this.state.digimon;\n\n    return (\n      <div>\n        <Navbar />\n        <InfoDigimon img={img} level={level} name={name} />\n      </div>\n    );\n  }\n}\n\nexport default DetailDigimon;\n","import React from 'react';\nimport Navbar from './../Componente/Navbarlayout';\nimport { Link } from 'react-router-dom';\n\nexport const Page404 = () => {\n  return (\n    <div className=\"container\">\n      <Navbar />\n      <h1>Page 404!</h1>\n      <span>No found Page.</span>\n      <br />\n      <Link to=\"/\">Voltar</Link>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Componentes/Pages/Home';\nimport DetailDigimon from './Componentes/Pages/DetailDigimon';\nimport { Page404 } from './Componentes/Pages/Page404';\n\nimport './App.css';\nimport 'bulma/css/bulma.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/DetailDigimon/:name\" component={DetailDigimon} />\n          <Route component={Page404} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n \nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter >\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}